<!DOCTYPE html>
<html lang="en">

<head>
	<meta charset="UTF-8">
	<meta name="viewport" content="width=device-width, initial-scale=1.0">
	<link href="/style/output.css" rel="stylesheet">
	<title>Calendario</title>
</head>

<body>
	<%- include('partials/navbar') %>
		<%- include('partials/menu') %>
			<div class="w-full flex justify-center gap-2 items-center">

				<h1 class="text-4xl text-center text-[#fe3d52] mt-10">Calendario</h1>
				<img src="/assets/calendariobulba.png" class="h-28 md:h-40" alt="">
			</div>

			<div class="flex w-full md:w-4/5 mt-20 justify-center md:justify-end">
				<div tabindex="0" class=" md:w-1/4 collapse collapse-arrow border-4 border-[#90ee90]">
					<div class="collapse-title text-[#fe3d52] md:text-[16px] font-medium">
						Come usare il calendario
					</div>
					<div class="collapse-content">
						<p>Clicca sul numero di un giorno nel calendario per pianificare un evento in quella data!</p>
					</div>
				</div>
				<img src="/assets/poke_png.png" class="hidden md:flex h-16 md:h-20" alt="">
			</div>



			<!-- component -->
			<!-- This is an example component -->
			<div>

				<link rel="dns-prefetch" href="//unpkg.com" />
				<link rel="dns-prefetch" href="//cdn.jsdelivr.net" />
				<link rel="stylesheet" href="https://unpkg.com/tailwindcss@^1.0/dist/tailwind.min.css">
				<script src="https://cdn.jsdelivr.net/gh/alpinejs/alpine@v2.x.x/dist/alpine.js" defer></script>

				<style>
					[x-cloak] {
						display: none;
					}
				</style>


				<div class="antialiased sans-serif h-screen">
					<div x-data="app()" x-init="[initDate(), getNoOfDays()]" x-cloak>
						<div class="md:w-[60%] mx-auto px-4 -mt-1">

							<!-- <div class="font-bold text-gray-800 text-xl mb-4">
				Schedule Tasks
			</div> -->

							<div class="bg-white rounded-lg border-4 border-[#90ee90] shadow overflow-hidden">

								<div class="flex items-center justify-between py-2 px-6">
									<div>
										<span x-text="MONTH_NAMES[month]"
											class="text-lg font-bold text-blue-950"></span>
										<span x-text="year" class="ml-1 text-lg text-gray-600 font-normal"></span>
									</div>
									<div class="border rounded-lg px-1" style="padding-top: 2px;">
										<button type="button"
											class="leading-none rounded-lg transition ease-in-out duration-100 inline-flex cursor-pointer hover:bg-gray-200 p-1 items-center"
											:class="{'cursor-not-allowed opacity-25': month == 0 }"
											:disabled="month == 0 ? true : false" @click="month--; getNoOfDays()">
											<svg class="h-6 w-6 text-gray-500 inline-flex leading-none" fill="none"
												viewBox="0 0 24 24" stroke="currentColor">
												<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
													d="M15 19l-7-7 7-7" />
											</svg>
										</button>
										<div class="border-r inline-flex h-6"></div>
										<button type="button"
											class="leading-none rounded-lg transition ease-in-out duration-100 inline-flex items-center cursor-pointer hover:bg-gray-200 p-1"
											:class="{'cursor-not-allowed opacity-25': month == 11 }"
											:disabled="month == 11 ? true : false" @click="month++; getNoOfDays()">
											<svg class="h-6 w-6 text-gray-500 inline-flex leading-none" fill="none"
												viewBox="0 0 24 24" stroke="currentColor">
												<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
													d="M9 5l7 7-7 7" />
											</svg>
										</button>
									</div>
								</div>

								<div class="-mx-1 -mb-1">
									<div class="flex flex-wrap" style="margin-bottom: -40px;">
										<template x-for="(day, index) in DAYS" :key="index">
											<div style="width: 14.26%" class="px-2 py-2">
												<div x-text="day"
													class="text-blue-950 text-sm uppercase tracking-wide font-bold text-center">
												</div>
											</div>
										</template>
									</div>

									<div class="flex flex-wrap border-t border-l">
										<template x-for="blankday in blankdays">
											<div style="width: 14.28%; height: 120px"
												class="text-center border-r border-b px-4 pt-2"></div>
										</template>
										<template x-for="(date, dateIndex) in no_of_days" :key="dateIndex">
											<div style="width: 14.28%; height: 120px"
												class="px-4 pt-2 border-r border-b relative">
												<div @click="showEventModal(date)" x-text="date"
													class="inline-flex w-6 h-6 items-center justify-center cursor-pointer text-center leading-none rounded-full transition ease-in-out duration-100"
													:class="{'bg-blue-500 text-white': isToday(date) == true, 'text-gray-700 hover:bg-blue-200': isToday(date) == false }">
												</div>
												<div style="height: 80px;" class="overflow-y-auto mt-1">
													<div class="absolute top-0 right-0 mt-2 mr-2 inline-flex items-center justify-center rounded-full text-sm w-6 h-6 bg-[#fe3d52] text-white leading-none"
														x-show="events.filter(e => e.event_date === new Date(year, month, date).toDateString()).length"
														x-text="events.filter(e => e.event_date === new Date(year, month, date).toDateString()).length">
													</div>

													<template
														x-for="event in events.filter(e => new Date(e.event_date).toDateString() ===  new Date(year, month, date).toDateString() )">
														<div class="px-2 py-1 rounded-lg mt-1 overflow-hidden border"
															:class="{
												'border-blue-200 text-blue-800 bg-blue-100': event.event_theme === 'blue',
												'border-red-200 text-red-800 bg-red-100': event.event_theme === 'red',
												'border-yellow-200 text-yellow-800 bg-yellow-100': event.event_theme === 'yellow',
												'border-green-200 text-green-800 bg-green-100': event.event_theme === 'green',
												'border-purple-200 text-purple-800 bg-purple-100': event.event_theme === 'purple'
											}">
															<p x-text="event.event_title"
																class="text-sm truncate leading-tight"></p>
														</div>
													</template>
												</div>
											</div>
										</template>
									</div>
								</div>
							</div>
						</div>

						<!-- Modal -->
						<div style=" background-color: rgba(0, 0, 0, 0.8)"
							class="fixed z-40 top-0 right-0 left-0 bottom-0 h-full w-screen"
							x-show.transition.opacity="openEventModal">
							<div class="p-0 md:p-4 w-[90%] md:w-2/3 mx-auto  absolute left-0 right-0 overflow-hidden md:mt-24">

								<div class="shadow absolute right-0 top-0 w-8 h-8 md:w-10 md:h-10 rounded-full bg-white text-gray-500 hover:text-gray-800 inline-flex items-center justify-center cursor-pointer"
									x-on:click="openEventModal = !openEventModal">
									<svg class="fill-current w-6 h-6" xmlns="http://www.w3.org/2000/svg"
										viewBox="0 0 24 24">
										<path
											d="M16.192 6.344L11.949 10.586 7.707 6.344 6.293 7.758 10.535 12 6.293 16.242 7.707 17.656 11.949 13.414 16.192 17.656 17.606 16.242 13.364 12 17.606 7.758z" />
									</svg>
								</div>
								<!-- <button onclick="logSelectedDate()"
									class="btn text-[#174a29] bg-[#90ee90] hover:border-2 font-light hover:bg-white hover:border-[#fe3d52]">Vai
									alle pianificazioni del giorno</button> -->
								<div class="flex flex-col gap-2 md:gap-0 md:flex-row mt-10 w-full">
									<div class="shadow w-full rounded-lg bg-white block p-8">
										<h2 class="font-light text-2xl text-[#fe3d52] mb-6 border-b pb-2">Pianificazioni del giorno</h2>
										<div class="overflow-x-auto">
											<table class="table">
											  <!-- head -->
											  <thead>
												<tr>
												  <th></th>
												  <th>Name</th>
												  <th>Job</th>
												  <th>Favorite Color</th>
												</tr>
											  </thead>
											  <tbody>
												<!-- row 1 -->
												<tr>
												  <th>1</th>
												  <td>Cy Ganderton</td>
												  <td>Quality Control Specialist</td>
												  <td>Blue</td>
												</tr>
												<!-- row 2 -->
												<tr>
												  <th>2</th>
												  <td>Hart Hagerty</td>
												  <td>Desktop Support Technician</td>
												  <td>Purple</td>
												</tr>
											  </tbody>
											</table>
										  </div>
									</div>
									<div class="shadow w-full rounded-lg bg-white overflow-hidden  block p-8">
										<div class=" flex w-full justify-between">
											<h2 class="font-light text-2xl text-[#fe3d52] mb-6 border-b pb-2">Aggiungi
												evento
											</h2>
											<!-- <img src="/assets/contadina.png" class="h-40" alt=""> -->
	
										</div>
										<form id="pianificazioneForm">
											<div class="mb-4">
												<label class="text-gray-800 block mb-1 font-bold text-sm tracking-wide">Orto
													da
													lavorare</label>
												<select id="nomeOrto" name="nomeOrto"
													class="bg-gray-200 appearance-none border-2 border-gray-200 rounded-lg w-full py-2 px-4 text-gray-700 leading-tight focus:outline-none focus:bg-white focus:border-blue-500"></select>
											</div>
	
											<div class="mb-4">
												<label
													class="text-gray-800 block mb-1 font-bold text-sm tracking-wide">Titolo
													evento</label>
												<input
													class="bg-gray-200 appearance-none border-2 border-gray-200 rounded-lg w-full py-2 px-4 text-gray-700 leading-tight focus:outline-none focus:bg-white focus:border-blue-500"
													type="text" x-model="event_title">
											</div>
	
											<div class="mb-4">
												<label class="text-gray-800 block mb-1 font-bold text-sm tracking-wide">Data
													evento</label>
												<input id="selectedDateInput"
													class="bg-gray-200 appearance-none border-2 border-gray-200 rounded-lg w-full py-2 px-4 text-gray-700 leading-tight focus:outline-none focus:bg-white focus:border-blue-500"
													type="text" x-model="event_date" readonly>
											</div>
	
											<div class="flex justify-between">
												<!-- <div class="inline-block w-64 mb-4">
												<label
													class="text-gray-800 block mb-1 font-bold text-sm tracking-wide">Seleziona
													un colore</label>
												<div class="relative">
													<select @change="event_theme = $event.target.value;"
														x-model="event_theme"
														class="block appearance-none w-full bg-gray-200 border-2 border-gray-200 hover:border-gray-500 px-4 py-2 pr-8 rounded-lg leading-tight focus:outline-none focus:bg-white focus:border-blue-500 text-gray-700">
														<template x-for="(theme, index) in themes">
															<option :value="theme.value" x-text="theme.label"></option>
														</template>
	
													</select>
													<div
														class="pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-700">
														<svg class="fill-current h-4 w-4" xmlns="http://www.w3.org/2000/svg"
															viewBox="0 0 20 20">
															<path
																d="M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z" />
														</svg>
													</div>
												</div>
											</div> -->
												<div class="form-control">
													<label class="cursor-pointer label">
														<span class="label-text">Abilita notifiche</span>
														<input type="checkbox" checked="checked"
															class="checkbox checkbox-success ml-8" />
													</label>
												</div>
												<img src="/assets/contadina.png" class="h-40 ml-[66px] md:ml-0" alt="">
											</div>
											<div class="-mt-16 text-left">
												<button type="button"
													class="hover:bg-white bg-[#fe3d52] border-[#fe3d52] font-light py-2 px-4 border rounded-lg shadow-sm mr-2"
													@click="openEventModal = !openEventModal">
													Chiudi
												</button>
												<button type="submit" 
													class="hover:bg-white bg-[#90ee90] font-light py-2 px-4 border border-[#90ee90] rounded-lg shadow-sm"
													@click="addEvent()">
													Salva evento
												</button>
											</div>
										</form>
									</div>

								</div>
								
							</div>
						</div>
						<!-- /Modal -->
					</div>
					<div class="flex justify-center -mt-4 md:-mt-16">
						<div class="w-full md:w-2/3 flex justify-between ">
							<img src="/assets/squirtle_png.png" class="h-32" alt="">
							<img src="/assets/charmander_png.png" class="h-32 -mt-1" alt="">
						</div>
					</div>


					<%- include('partials/footer') %>
						<%- include('partials/drawer_content') %>
				</div>
				<script>
					const MONTH_NAMES = ['Gennaio', 'Febbraio', 'Marzo', 'Aprile', 'Maggio', 'Giugno', 'Luglio', 'Agosto', 'Settembre', 'Ottobre', 'Novembre', 'Dicembre'];
					const DAYS = ['Dom', 'Lun', 'Mar', 'Mer', 'Gio', 'Ven', 'Sab'];
					// funzione per converitire la data nel giusto formato
					function convertDateFormat(dateString) {
						const dateObject = new Date(dateString);
						const year = dateObject.getFullYear();
						// Nota: i mesi in JavaScript sono indicizzati da 0 a 11, quindi aggiungi 1 al mese
						const month = dateObject.getMonth() + 1;
						const day = dateObject.getDate();
						// Formatta la data nel formato "YYYY-MM-DD"
						const formattedDate = `${year}-${month.toString().padStart(2, '0')}-${day.toString().padStart(2, '0')}`;
						return formattedDate;
					}

					// function updateInputDate() {
					// 	const inputElement = document.getElementById('selectedDateInput');
					// 	const currentDate = inputElement.value;
					// 	console.log(inputElement);
					// 	const formattedDate = convertDateFormat(currentDate);
					// 	inputElement.value = formattedDate;
					// 	console.log(inputElement.value);
					// }


					function app() {
						return {
							month: '',
							year: '',
							no_of_days: [],
							blankdays: [],
							days: ['Dom', 'Lun', 'Mar', 'Mer', 'Gio', 'Ven', 'Sab'],


							events: [
								{
									event_date: new Date(2024, 4, 5),
									event_title: "prova",
									event_theme: 'blue'
								},

								{
									event_date: new Date(2020, 3, 10),
									event_title: "Birthday",
									event_theme: 'red'
								},

								{
									event_date: new Date(2020, 3, 16),
									event_title: "Upcoming Event",
									event_theme: 'green'
								}
							],
							event_title: '',
							event_date: '',
							event_theme: 'blue',

							themes: [
								{
									value: "blue",
									label: "Tema Blue"
								},
								{
									value: "red",
									label: "Tema rosso"
								},
								{
									value: "yellow",
									label: "Tema Giallo"
								},
								{
									value: "green",
									label: "Tema Verde"
								},
								{
									value: "purple",
									label: "Tema Viola"
								}
							],

							openEventModal: false,


							initDate() {
								let today = new Date();
								this.month = today.getMonth();
								this.year = today.getFullYear();
								this.datepickerValue = new Date(this.year, this.month, today.getDate()).toDateString();
							},

							isToday(date) {
								const today = new Date();
								const d = new Date(this.year, this.month, date);

								return today.toDateString() === d.toDateString() ? true : false;
							},

							showEventModal(date) {
								// open the modal
								this.openEventModal = true;
								this.event_date = new Date(this.year, this.month, date).toDateString();
								// updateInputDate();
							},

							addEvent() {
								if (this.event_title == '') {
									return;
								}

								this.events.push({
									event_date: this.event_date,
									event_title: this.event_title,
									event_theme: this.event_theme
								});

								console.log(this.events);

								// clear the form data
								this.event_title = '';
								this.event_date = '';
								this.event_theme = 'blue';

								//close the modal
								this.openEventModal = false;
							},

							getNoOfDays() {
								let daysInMonth = new Date(this.year, this.month + 1, 0).getDate();

								// find where to start calendar day of week
								let dayOfWeek = new Date(this.year, this.month).getDay();
								let blankdaysArray = [];
								for (var i = 1; i <= dayOfWeek; i++) {
									blankdaysArray.push(i);
								}

								let daysArray = [];
								for (var i = 1; i <= daysInMonth; i++) {
									daysArray.push(i);
								}

								this.blankdays = blankdaysArray;
								this.no_of_days = daysArray;
							}
						}
					}

					function logSelectedDate() {
						const selectedDate = document.getElementById('selectedDateInput').value;
						console.log(selectedDate);
						const formattedDate = convertDateFormat(selectedDate);
						console.log(formattedDate);
					}

					// function updateInputDate() {
					// 	const inputElement = document.getElementById('selectedDateInput');
					// 	const currentDate = inputElement.value;
					// 	console.log(currentDate);
					// 	const formattedDate = convertDateFormat(currentDate);
					// 	inputElement.value = formattedDate;
					// 	console.log(inputElement.value);
					// }

				</script>
				<script src="/scripts/formCalendario.js"></script>
				<script></script>



</body>

</html>